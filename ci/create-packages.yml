trigger:
  - master
  - develop
  - release/*  

# Don't trigger for a pull request
pr: none

# Include shared variables
variables:
- template: shared-variables.yml
- group: CIAutomation
# Access token for the git repository. Used by the git tag task.
- name: system_accesstoken
  value: $(System.AccessToken)

resources:
  repositories:
    - repository: ciTemplates # Id of the repository used to reference to in this script
      type: git
      name: common-ci # Name of the actual repository

stages:

- stage: Publish

  jobs:
  - template: shared-git-version-job.yml@ciTemplates
    parameters:
      imageName: $(linuxImage)

  - job: Publish
    displayName: Publish Packages
    dependsOn: Versioning
    condition: and(succeeded(), ne(variables['CreatePackages'], 'Off'))

    pool:
      vmImage: $(linuxImage)
    
    variables:
      - group: PackageFeedAccessToken
      - name: GitVersionSemVer
        value: $[ dependencies.Versioning.outputs['SetGitVersionVars.GitVersionSemVer'] ]
    
    steps:
    # The lines below are needed to allow the pipeline access to the
    # OAuth access token that controls write access to the git repository. 
    # (Required for GitTag task)
    - checkout: self
      lfs: true
      submodules: recursive
      persistCredentials: true
    
    # Set version number.
    - task: Npm@1
      displayName: 'npm version fiftyone.geolocation'
      inputs:
        command: 'custom'
        workingDir: '$(System.DefaultWorkingDirectory)'
        verbose: true
        customCommand: 'version --no-git-tag-version $(GitVersionSemVer)'
      continueOnError: true
      condition: succeededOrFailed()
    
    # Create packages
    - script: |
        npm pack
      displayName: 'Create npm package for later release'
      condition: succeededOrFailed()
    
    # Copy artifacts contents.
    - task: CopyFiles@2
      inputs:
        sourceFolder: '$(Build.SourcesDirectory)'
        contents: '**/*.tgz' 
        targetFolder: $(Build.ArtifactStagingDirectory)/npm/fiftyone.geolocation
      displayName: 'Copy tgz files'
      condition: succeededOrFailed()
    
    - task: CopyFiles@2
      inputs:
        sourceFolder: '$(Build.SourcesDirectory)'
        contents: '**/package.json' 
        targetFolder: $(Build.ArtifactStagingDirectory)/npm/fiftyone.geolocation
      displayName: 'Copy package.json files'
      condition: succeededOrFailed()
    
    - script: |
        ls $(Build.ArtifactStagingDirectory)/npm/fiftyone.geolocation/*fiftyone.geolocation*.tgz
        if [ $? -ne 0 ]; then
          echo "ERROR: Could not find packed module."
          exit 1
        fi
      displayName: 'List artifact staging contents'
      condition: succeededOrFailed()
      failOnStderr: true
    
    # Publish artifacts to DevOps
    - task: PublishBuildArtifacts@1
      inputs:
        pathtoPublish: '$(Build.ArtifactStagingDirectory)/npm'
        artifactName: npm
      displayName: 'Publish npm artifact'
      condition: succeededOrFailed()

  - template: shared-git-tag-job.yml@ciTemplates
    parameters:
      imageName: $(linuxImage)
      jobDependencies: [Versioning,Publish]